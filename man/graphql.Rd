% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client.R
\name{graphql}
\alias{graphql}
\title{ghql client}
\usage{
graphql(url, headers)
}
\arguments{
\item{url}{(character) URL for the GraphQL schema}

\item{headers}{Any acceptable \pkg{httr} header, constructed typically
via \code{\link[httr]{add_headers}}. See examples}
}
\value{
a \code{GraphqlClient} class (R6 class)
}
\description{
ghql client
}
\section{etcd methods}{

\strong{Methods}
  \describe{
    \item{\code{ping()}}{
     ping the GraphQL server, return HTTP status code
    }
    \item{\code{schema2json()}}{
     convert schema to JSON
    }
  }
}
\examples{
\dontrun{
# make a client
# cli <- graphql(url = "https://api.github.com/graphql")

library("httr")
token <- Sys.getenv("GITHUB_GRAPHQL_TOKEN")
cli <- graphql(
  url = "https://api.github.com/graphql",
  headers = add_headers(Authorization = paste0("Bearer ", token))
)

# variables
cli$url
cli$schema
cli$schema$data
cli$schema$data$`__schema`
cli$schema$data$`__schema`$queryType
cli$schema$data$`__schema`$mutationType
cli$schema$data$`__schema`$subscriptionType
head(cli$schema$data$`__schema`$types)
cli$schema$data$`__schema`$directives

# methods
## ping - hopefully you get a 200
cli$ping()

## dump schema
cli$schema2json()

## define query
cli$query('query { }')
cli$query_string
### execute the query
cli$exec()

## another
cli$query('{
  viewer {
    repositories(last: 10, isFork: false, privacy: PUBLIC) {
      edges {
        node {
          isPrivate
          id
          name
        }
      }
    }
  }
}')
cli$query_string
### execute the query
cli$exec()
}
}

